version: '3.9'
services:
  db:
    image: postgres:15
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      # use container env vars so pg_isready checks the configured DB name
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost -p $$POSTGRES_PORT"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_HOST: db
    command: >
      sh -c "python manage.py migrate --noinput && \
             python manage.py collectstatic --noinput && \
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./backend:/app:cached
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
